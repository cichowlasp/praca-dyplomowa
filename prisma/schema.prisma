generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id                   String    @id @default(cuid())
  edited               Boolean   @default(false)
  authorId             String
  reviewed             Reviewed  @default(NOTREVIEWED)
  creationData         DateTime  @default(now())
  realizationDateEnd   DateTime?
  realizationDateStart DateTime?
  user                 User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  informations         Info[]
  messages             Message[]
}

model Message {
  id      String   @id @default(cuid())
  date    DateTime @default(now())
  name    String
  message String
  orderId String?
  Order   Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Info {
  id      String  @id @default(cuid())
  name    String
  fill    String
  index   Int     @default(0)
  orderId String?
  Order   Order?  @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model Company {
  id             String @id @default(cuid())
  companyName    String
  nip            String @unique
  companyEmail   String @unique
  companyAddress String
  phoneNumber    String
  createUserPin  String
  secretPhrase   String @unique
  users          User[]
}

model User {
  id          String   @id @default(cuid())
  name        String
  surname     String
  email       String   @unique
  pin         String?  @unique
  password    String?
  admin       Boolean  @default(false)
  company     String
  createdAt   DateTime @default(now())
  phoneNumber String
  companyId   String?
  Company     Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)
  orders      Order[]
}

model Form {
  id         String     @id @default(cuid())
  active     Boolean    @default(false)
  name       String
  checkboxes CheckBox[]
  inputs     Input[]
  selects    Select[]
}

model Input {
  id          String  @id @default(cuid())
  placeholder String?
  type        String
  required    Boolean
  maxLength   Int?
  minLength   Int?
  formId      String?
  label       String?
  order       Int     @default(0)
  Form        Form?   @relation(fields: [formId], references: [id], onDelete: Cascade)
}

model Select {
  id          String   @id @default(cuid())
  placeholder String?
  required    Boolean  @default(false)
  formId      String?
  label       String?
  order       Int      @default(0)
  Form        Form?    @relation(fields: [formId], references: [id], onDelete: Cascade)
  options     Option[]
}

model CheckBox {
  id       String  @id @default(cuid())
  order    Int     @default(0)
  label    String?
  required Boolean
  formId   String?
  value    Boolean @default(false)
  Form     Form?   @relation(fields: [formId], references: [id])
}

model Option {
  id       String  @id @default(cuid())
  value    String
  selectId String?
  Select   Select? @relation(fields: [selectId], references: [id], onDelete: Cascade)
}

enum Reviewed {
  APPROVED
  DECLINE
  NOTREVIEWED
}
